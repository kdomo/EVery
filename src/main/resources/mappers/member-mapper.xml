<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	PUBLIC "-//mybatis.org/DTD Mapper 3.0//EN"
	"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	
<mapper namespace="memberMapper">
	
	<!-- 중복확인 및 값 검사(id, nickname, phone, naver_num) -->
	<select id="checkMember" parameterType="MemberDTO" resultType="int">
		SELECT COUNT(*) FROM tbl_member
		<trim prefix="where">
			<if test="id != null">
				id=#{id}
			</if>
			<if test="nickname != null">
				nickname=#{nickname}
			</if>
			<if test="phone != null">
				phone=#{phone}
			</if>
			<if test="naver_num != null">
				naver_num=#{naver_num}
			</if>
			<if test="kakao_num != null">
				kakao_num=#{kakao_num}
			</if>
		</trim>
	</select>
	
	<!-- 중복확인(id, nickname, phone) -->
	<!-- <select id="checkMember" parameterType="MemberDTO" resultType="MemberDTO">
		SELECT * FROM tbl_member
		<trim prefix="where">
			<if test="id != null">
				id=#{id}
			</if>
			<if test="nickname != null">
				nickname=#{nickname}
			</if>
			<if test="phone != null">
				phone=#{phone}
			</if>
		</trim>
	</select>  -->
	
	<!-- 회원가입 -->
	<insert id="insertMem" parameterType="MemberDTO">
		INSERT INTO tbl_member 
		<trim prefix="values">
			<choose>
				<!-- 네이버 회원가입이면 네이버 고유값도 같이 셋팅-->
				<when test="naver_num != null">
					(#{id}, null, #{nickname}, #{phone}, 0, 0, #{naver_num}, 0, sysdate)
				</when>
				<!-- 카카오 회원가입이면 카카오 고유값도 같이 셋팅 -->
				<when test="kakao_num != null">
				 	(#{id}, #{pw}, #{nickname}, #{phone}, 0, 0, 0, #{kakao_num}, sysdate)
				</when>
				<!-- 일반 회원가입이면 -->
				<otherwise>
					(#{id}, #{pw}, #{nickname}, #{phone}, 0, 0, 0, 0, sysdate)
				</otherwise>
			</choose>
		</trim>
	</insert>
	
	<!-- 일반 로그인 -->
	<select id="isLoginOk" parameterType="MemberDTO" resultType="MemberDTO">
		SELECT * FROM tbl_member WHERE id=#{id} AND pw=#{pw}
	</select>
	
	<!-- 핸드폰값 또는 네이버 고유값으로 사용자 정보 불러오기, 카카오 고유값으로 사용자 정보 불러오기 -->
	<select id="getMember" parameterType="MemberDTO" resultType="MemberDTO">
		SELECT * FROM tbl_member 
		<trim prefix="where">
			<if test="phone != null">
				phone=#{phone}
			</if>
			<if test="naver_num != null">
				naver_num=#{naver_num}
			</if>
			<if test="kakao_num != null">
				kakao_num=#{kakao_num}
			</if>
		</trim>
	</select>
	
	<!-- 네이버 로그인 시 이미 가입되어 있는 사용자라면 네이버 고유id 셋팅 -->
	<update id="setNaverId" parameterType="MemberDTO">
		UPDATE tbl_member SET naver_num=#{naver_num} WHERE phone=#{phone}
	</update>
	
	<!-- 카카오 로그인 시 이미 가입되어 있는 사용자라면 카카오 고유id 셋팅 -->
	<update id="setKakaoId" parameterType="MemberDTO">
		UPDATE tbl_member SET kakao_num=#{kakao_num} WHERE phone=#{phone}
	</update>
	
	<!-- 회원 존재 여부 -->
	<select id="getExistMember" parameterType="MemberDTO" resultType="int">
		SELECT COUNT(*) FROM tbl_member
		<trim prefix="where">
			<choose>
				<when test="id == null">
					phone=#{phone}
				</when>
				<otherwise>
					id=#{id} and phone=#{phone}
				</otherwise>
			</choose>
		</trim>
	</select>
	
	<!-- 아이디 찾기 -->
	<select id="getMemberId" resultType="MemberDTO">
		SELECT id FROM tbl_member WHERE phone=#{phone}
	</select>
	
	<!-- 비밀번호 변경 -->
	<update id="modifyPw" parameterType="MemberDTO">
		UPDATE tbl_member SET pw=#{pw} WHERE
		<choose>
			<when test="phone != null">
				id=#{id} AND phone=#{phone}
			</when>
			<otherwise>
				id=#{id}
			</otherwise>
		</choose>
	</update>
	
	<!-- 회원탈퇴 -->
	<delete id="getMemberWithdrawal">
		DELETE FROM tbl_member WHERE id=#{id}
	</delete>
	
	<!-- 닉네임 변경 -->
	<update id="modifyNickname" parameterType="map">
		UPDATE tbl_member SET nickname=#{afterNickname} WHERE nickname=#{beforeNickname}
	</update>
	
	<!-- 전화번호 변경 -->
	<update id="modifyPhone" parameterType="map">
		UPDATE tbl_member SET phone=#{afterPhone} WHERE phone=#{beforePhone}
	</update>
	
	<!-- 닉네임 또는 전화번호로 회원정보 불러오기 -->
	<select id="getMemberByNickOrPhone" parameterType="MemberDTO" resultType="MemberDTO">
		SELECT * FROM tbl_member WHERE
			<if test="nickname != null">
				nickname=#{nickname}
			</if>
			<if test="phone != null">
				phone=#{phone}
			</if>
	</select>
	
	<!-- 아이디와 비밀번호로 사용자 여부 체크 -->
	<select id="checkMemberByIdAndPw" parameterType="map" resultType="int">
		SELECT COUNT(*) FROM tbl_member WHERE id=#{id} AND pw=#{pw}
	</select>
	
	<!-- 회원 전체 카운트하기 -->
	<select id="countAllMember" resultType="int">
		SELECT COUNT(*) FROM tbl_member
	</select>
	
	<!-- 회원 리스트 출력 -->
	<select id="getMemberList" parameterType="map" resultType="MemberDTO">
		SELECT * 
		FROM( SELECT ROW_NUMBER() OVER(ORDER BY signup_date desc) rank, a.* from tbl_member a )
		where rank between #{startRange} and #{endRange}
		order by rank asc
	</select>
	
	<!-- 멤버삭제 -->
	<delete id="deleteMember" parameterType="map">
		DELETE FROM tbl_member WHERE
		<foreach collection="userId" item="users" open="(" close=")" separator="or">
			id=#{users}
		</foreach>
	</delete>
	
	
	<!--************ 태환추가 ********************-->

	
	<!-- 컬럼리스트 신청 거절 시  -->
	<update id="reject" parameterType="map">
		update tbl_member set identification_num = 3 where id in
		<foreach collection="list" item="arr" open="(" close=")" separator=",">
		 #{arr}
		</foreach>
	</update>
	
	<!-- 컬럼리스트 신청 승인 시  -->
	<update id="approval" parameterType="map">
		update tbl_member set column_application = 1, identification_num = 2 where id in
		<foreach collection="list" item="arr" open="(" close=")" separator=",">
		 #{arr}
		</foreach>
	</update>
	
	<!-- 컬럼리스트 권한 해제 시  -->
	<update id="releaseOfAuthority" parameterType="map">
		update tbl_member set column_application = 0, identification_num = 0 where id in
		<foreach collection="list" item="arr" open="(" close=")" separator=",">
		 #{arr}
		</foreach>
	</update>
	
	<!-- 컬럼리스트 신청 목록 수 -->
	<select id="countAll" resultType="int">
		select count(*) from tbl_member where identification_num = 1
	</select>
	
	<!-- 닉네임 가져오기 -->
	<select id="getNickname" resultType="String">
		select nickname from tbl_member where id = #{id} 
	</select>
	
	
	<!-- 컬럼리스트 신청 -->
	<update id="columnApplication">
		update tbl_member set identification_num = 1 where id = #{id}
	</update>
	
	<!-- 컬럼리스트 신청 목록 -->
	<select id="columnList" resultType="MemberDTO">
		select id,nickname,identification_num,column_application 
		from tbl_member 
		where identification_num = 1
	</select>
	
	<!-- 마이페이지에서 컬럼리스트인지 확인하기 -->
	<select id="getMemberDTO" resultType="MemberDTO">
		select id,identification_num,column_application 
		from tbl_member 
		where id = #{id}
	</select>
	
	<!-- 마이페이지에서 컬럼리스트 신청 취소 -->
	<update id="cancelColumnList">
		update tbl_member set column_application = 0, identification_num = 0 where id = #{id}
	</update>
	
	<!-- 컬럼리스트 승인 목록 -->
	<select id="getApprovalColumnList" resultType="MemberDTO">
		select id,nickname,identification_num,column_application 
		from tbl_member 
		where column_application = 1 and identification_num = 2
	</select>
</mapper>